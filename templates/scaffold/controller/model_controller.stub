<?php

namespace $NAMESPACE_CONTROLLER$;

use $NAMESPACE_REQUEST$\$MODEL_NAME$\Index$MODEL_NAME$Request;
use $NAMESPACE_REQUEST$\$MODEL_NAME$\Create$MODEL_NAME$Request;
use $NAMESPACE_REQUEST$\$MODEL_NAME$\Update$MODEL_NAME$Request;
use $NAMESPACE_APP$\Http\Controllers\AppBaseController;
use $NAMESPACE_MODEL$\$MODEL_NAME$;
use Illuminate\Http\Request;
use Illuminate\Http\Response;
use Illuminate\Support\Arr;
use Illuminate\View\View;
use Laracasts\Flash\Flash;

class $MODEL_NAME$Controller extends AppBaseController
{
    /**
     * Display a listing of the $MODEL_NAME$.
     *
     * @param Request $request
     *
     * @return Factory|View
     */
    public function index(Index$MODEL_NAME$Request $request)
    {
        $requestSanitized = $request->validated();

        /** @var $MODEL_NAME$ $$MODEL_NAME_PLURAL_CAMEL$ */
        $$MODEL_NAME_PLURAL_CAMEL$ = $MODEL_NAME$::when(Arr::has($requestSanitized, 'query'), function ($query) use ($requestSanitized) {
            $query->search($requestSanitized['query']);
        })->$RENDER_TYPE$;

        return view('$VIEW_PREFIX$$MODEL_NAME_PLURAL_SNAKE$.index', [
            '$MODEL_NAME_PLURAL_CAMEL$' => $$MODEL_NAME_PLURAL_CAMEL$
        ]);
    }

    /**
     * Show the form for creating a new $MODEL_NAME$.
     *
     * @return Factory|View
     */
    public function store(Create$MODEL_NAME$Request $request)
    {
        $requestSanitized = $request->validated();

        /** @var $MODEL_NAME$ $$MODEL_NAME_CAMEL$ */
        $$MODEL_NAME_CAMEL$ = $MODEL_NAME$::create($requestSanitized);

        Flash::success('$MODEL_NAME_HUMAN$ saved successfully.');

        return redirect(route('$ROUTE_NAMED_PREFIX$$MODEL_NAME_PLURAL_CAMEL$.index'));
    }

    /**
     * Display the specified $MODEL_NAME$.
     *
     * @param $MODEL_NAME$ $$MODEL_NAME_CAMEL$
     *
     * @return Factory|View
     */
    public function show($MODEL_NAME$ $$MODEL_NAME_CAMEL$)
    {
        return view('$VIEW_PREFIX$$MODEL_NAME_PLURAL_SNAKE$.show', [
                'MODEL_NAME_CAMEL$' => $$MODEL_NAME_CAMEL$
        ]);
    }

    /**
     * Show the form for editing the specified $MODEL_NAME$.
     *
     * @param $MODEL_NAME$ $$MODEL_NAME_CAMEL$
     *
     * @return Factory|View
     */
    public function edit($MODEL_NAME$ $$MODEL_NAME_CAMEL$)
    {
        return view('$VIEW_PREFIX$$MODEL_NAME_PLURAL_SNAKE$.edit', [
            '$MODEL_NAME_CAMEL$' => $$MODEL_NAME_CAMEL$
        ]);
    }

    /**
     * Update the specified $MODEL_NAME$ in storage.
     *
     * @param $MODEL_NAME$ $$MODEL_NAME_CAMEL$
     * @param Update$MODEL_NAME$Request $request
     *
     * @return \Illuminate\Http\RedirectResponse|\Illuminate\Routing\Redirector
     */
    public function update($MODEL_NAME$ $$MODEL_NAME_CAMEL$, Update$MODEL_NAME$Request $request)
    {
        $requestSanitized = $request->validated();
        $$MODEL_NAME_CAMEL$->update($requestSanitized);

        Flash::success('$MODEL_NAME_HUMAN$ updated successfully.');

        return redirect(route('$ROUTE_NAMED_PREFIX$$MODEL_NAME_PLURAL_CAMEL$.index'));
    }

    /**
     * Remove the specified $MODEL_NAME$ from storage.
     *
     * @param $MODEL_NAME$ $$MODEL_NAME_CAMEL$
     *
     * @throws \Exception
     *
     * @return \Illuminate\Http\RedirectResponse|\Illuminate\Routing\Redirector
     */
    public function destroy($MODEL_NAME$ $$MODEL_NAME_CAMEL$)
    {
        $$MODEL_NAME_CAMEL$->delete();

        Flash::success('$MODEL_NAME_HUMAN$ deleted successfully.');

        return redirect(route('$ROUTE_NAMED_PREFIX$$MODEL_NAME_PLURAL_CAMEL$.index'));
    }
}
