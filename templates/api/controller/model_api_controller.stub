<?php

namespace $NAMESPACE_API_CONTROLLER$;

use $NAMESPACE_API_REQUEST$\$MODEL_NAME$\Create$MODEL_NAME$APIRequest;
use $NAMESPACE_API_REQUEST$\$MODEL_NAME$\Update$MODEL_NAME$APIRequest;
use $NAMESPACE_MODEL$\$MODEL_NAME$;
use Illuminate\Http\Request;
use $NAMESPACE_APP$\Http\Controllers\AppBaseController;
use Response;

$DOC_CONTROLLER$
class $MODEL_NAME$APIController extends AppBaseController
{
    $DOC_INDEX$
    public function index(Request $request)
    {
        $query = $MODEL_NAME$::query();

        if ($request->get('skip')) {
            $query->skip($request->get('skip'));
        }
        if ($request->get('limit')) {
            $query->limit($request->get('limit'));
        }

        $$MODEL_NAME_PLURAL_CAMEL$ = $query->get();

        return $this->sendResponse($$MODEL_NAME_PLURAL_CAMEL$->toArray(), '$MODEL_NAME_PLURAL_HUMAN$ retrieved successfully');
    }

    $DOC_STORE$
    public function store(Create$MODEL_NAME$APIRequest $request)
    {
        $input = $request->validated();

        /** @var $MODEL_NAME$ $$MODEL_NAME_CAMEL$ */
        $$MODEL_NAME_CAMEL$ = $MODEL_NAME$::create($input);

        return $this->sendResponse($$MODEL_NAME_CAMEL$->toArray(), '$MODEL_NAME_HUMAN$ saved successfully');
    }

    $DOC_SHOW$
    public function show($MODEL_NAME$ $MODEL_NAME_CAMEL$)
    {
        return $this->sendResponse($$MODEL_NAME_CAMEL$->toArray(), '$MODEL_NAME_HUMAN$ retrieved successfully');
    }

    $DOC_UPDATE$
    public function update($MODEL_NAME$ $MODEL_NAME_CAMEL$, Update$MODEL_NAME$APIRequest $request)
    {
        $$MODEL_NAME_CAMEL$->update($request->validated());

        return $this->sendResponse($$MODEL_NAME_CAMEL$->toArray(), '$MODEL_NAME$ updated successfully');
    }

    $DOC_DESTROY$
    public function destroy($MODEL_NAME$ $MODEL_NAME_CAMEL$)
    {
        $$MODEL_NAME_CAMEL$->delete();

        return $this->sendSuccess('$MODEL_NAME_HUMAN$ deleted successfully');
    }
}
